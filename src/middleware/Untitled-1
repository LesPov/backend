// 1 Listo solo faltari documentar el codigo de login y emepzar a

//2 crear  dos funciones:

// // validateRole.ts
// import { Request, Response, NextFunction } from 'express';
// import jwt from 'jsonwebtoken';
// import { errorMessages } from './messages';

// const validateRole = (requiredRole: string) => {
//   return (req: Request, res: Response, next: NextFunction) => {
//     // Verifica el token del usuario para obtener el rol
//     const token = req.headers['authorization']?.split(' ')[1];
//     if (!token) {
//       return res.status(401).json({
//         msg: errorMessages.tokenNotProvided,
//       });
//     }

//     try {
//       const decodedToken: any = jwt.verify(token, process.env.SECRET_KEY || 'pepito123');
//       const userRole = decodedToken.rol;

//       // Verificar si el rol del usuario coincide con el rol requerido o es un administrador
//       if (userRole === requiredRole || userRole === 'admin') {
//         // Si el rol es válido, se permite el acceso a la ruta protegida
//         next();
//       } else {
//         return res.status(403).json({
//           msg: errorMessages.accessDenied,
//         });
//       }
//     } catch (error) {
//       return res.status(401).json({
//         msg: errorMessages.invalidToken,
//       });
//     }
//   };
// };

// export default validateRole;
// -

// yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy


// import { Request, Response, NextFunction } from 'express';
// import jwt from 'jsonwebtoken';
// import { errorMessages } from './messages';

// interface CustomRequest extends Request {
//     user?: {
//         userId: number;
//         rol: string;
//         // Agrega otras propiedades según sea necesario
//     };
// }

// const validateToken = (req: CustomRequest, res: Response, next: NextFunction) => {
//     const headerToken = req.headers['authorization'];

//     // Verificar si el token existe y comienza con 'Bearer '
//     if (headerToken != undefined && headerToken.startsWith('Bearer ')) {
//         try {
//             // Extraer el token del encabezado
//             const bearerToken = headerToken.slice(7);
//             // Verificar la autenticidad del token
//             const decodedToken: any = jwt.verify(bearerToken, process.env.SECRET_KEY || 'pepito123');
//             // Adjuntar la información del usuario al objeto Request
//             req.user = decodedToken;
//             // Si el token es válido, pasar al siguiente middleware o ruta
//             next();
//         } catch (error) {
//             // Si hay un error en la verificación, responder con un error 401 (no autorizado)
//             res.status(401).json({
//                 msg: errorMessages.invalidToken,
//             });
//         }
//     } else {
//         // Si el token no está presente o no comienza con 'Bearer ', responder con un error 401 (no autorizado)
//         res.status(401).json({
//             msg: errorMessages.accessDeniedNoToken,
//         });
//     }
// };

// export default validateToken;


/// luego se valida si el usario es admin o usar y se modican las rutas para esos suarios listo 